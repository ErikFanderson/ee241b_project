// Automatically generated by PRGA's RTL generator
module sram_test (
    input wire [0:0] clk,
    input wire [0:0] cfg_clk,
    input wire [0:0] cfg_scan_en,
    input wire [0:0] cfg_lut_we,
    input wire [0:0] cfg_scan_in,
    output wire [0:0] cfg_scan_out
    );
    
    //Instantiate SRAM control shift registers
    reg [38:0] sram_input_cfg;
    wire [31:0] sram_rd_data;
    
    always @(posedge cfg_clk) begin
        if (cfg_scan_en) begin
            sram_input_cfg <= {sram_input_cfg[37:0], cfg_scan_in};
        end
    end
    
    assign cfg_scan_out = sram_input_cfg[38];
    
    //// Instantiate SRAM (2RW - 16x32) - Just don't use 1 port...
    //SRAM2RW16x32 sram_cfg (
    //    .CE1(cfg_clk),      // clk 
    //    .A1(sram_cfg[3:0]), // address 
    //    .WEB1(sram_cfg[4]), // write enable bar 
    //    .OEB1(sram_cfg[5]), // output enable bar 
    //    .CSB1(sram_cfg[6]), // chip select bar 
    //    .I1(sram_cfg[38:7]),// input 
    //    .O1(sram_rd_data),  // output 
    //    
    //    // Leave second port disconnected (Needed 16x32 1RW but only had 2RW)
    //    .A2(),
    //    .CE2(),
    //    .WEB2(),
    //    .OEB2(),
    //    .CSB2(),
    //    .I2(),
    //    .O2()
    //);

endmodule
